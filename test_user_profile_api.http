### 用户资料管理API测试

### 1. 用户注册 (获取令牌)
POST http://localhost:8000/api/auth/register
Content-Type: application/json

{
    "username": "profileuser",
    "email": "profile@example.com",
    "password": "Profile123!",
    "confirm_password": "Profile123!",
    "full_name": "资料测试用户"
}

### 2. 获取用户资料
GET http://localhost:8000/api/user/profile
Authorization: Bearer {{access_token}}

### 3. 更新用户全名
PUT http://localhost:8000/api/user/profile
Authorization: Bearer {{access_token}}
Content-Type: application/json

{
    "full_name": "更新后的资料测试用户"
}

### 4. 更新用户邮箱
PUT http://localhost:8000/api/user/profile
Authorization: Bearer {{access_token}}
Content-Type: application/json

{
    "email": "updated_profile@example.com"
}

### 5. 同时更新全名和邮箱
PUT http://localhost:8000/api/user/profile
Authorization: Bearer {{access_token}}
Content-Type: application/json

{
    "full_name": "完整更新的用户名",
    "email": "complete_update@example.com"
}

### 6. 获取用户状态
GET http://localhost:8000/api/user/profile/status
Authorization: Bearer {{access_token}}

### 7. 无认证访问测试 (应该返回403)
GET http://localhost:8000/api/user/profile

### 8. 无效令牌测试 (应该返回401)
GET http://localhost:8000/api/user/profile
Authorization: Bearer invalid_token_here

### 9. 空数据更新测试
PUT http://localhost:8000/api/user/profile
Authorization: Bearer {{access_token}}
Content-Type: application/json

{}

### 10. 无效邮箱格式测试 (应该返回422)
PUT http://localhost:8000/api/user/profile
Authorization: Bearer {{access_token}}
Content-Type: application/json

{
    "email": "invalid-email-format"
}